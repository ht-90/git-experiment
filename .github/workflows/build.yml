name: build

on:
  [ "push", "pull_request" ]

jobs:

  build:

    name: build
    runs-on: ubuntu-latest

    steps:

      - name: Check out repository
        uses: actions/checkout@v2

      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Cache python dependecies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install python dependecies
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt

      - name: Build documentation
        run: sphinx-build -E -W -b html ./docs/source ./docs/build

      - name: Upload documentation
        uses: actions/upload-artifact@v2
        with:
          name: Sphinx documentation
          path: docs/build

  deploy:

    needs: build
    name: deploy
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure git user
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git fetch -a

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: Sphinx documentation
          path: .

      - name: Create .nojekyll file
        run: echo > .nojekyll

      - name: Delete existing gh-pg branch
        run: |
          if git branch -a | grep -q -w "remotes/origin/gh-pg$";
          then git push origin -d gh-pg;
          fi

      - name: Commit to gh-pg branch
        run: |
          git checkout -b --orphan gh-pg
          git add .
          git commit -m "Deploy documentation"
          git push origin gh-pg
